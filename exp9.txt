9a)
echo enter a number 
read a 
i=2 
fact=1 
if [ $a -ge 2 ] 
then 
while [ $i -le $a ] 
do 
fact=`expr $fact \* $i` 
i=`expr $i + 1` 
done 
fi 
echo factorial of $a=$fact

9b)
include<stdio.h> 
#include<unistd.h> 
#include<stdlib.h> 
#include<string.h> 
int global=10; 
int main() 
{ 
int local=20; 
pid_t pid; 
printf("before fork\n"); 
printf("pid=%d,global=%d,local=%d\n",getpid(),global,local); 
pid=fork(); 
if(pid<0) 
printf("failed to create child"); 
else if(pid==0) 
{ 
printf("after fork\n"); 
global++; 
local++; 
} 
else if(pid>0) 
sleep(2); 
printf("cid=%d,global=%d,local=%d\n",getpid(),global,local); 
exit(0); 
} 

9c)
#include <stdio.h> 
#include<stdlib.h> 
#include <sys/wait.h> /* contains prototype for wait */ 
int main(void) { 
int pid; 
int status; 
printf("Hello World!\n"); 
pid = fork( ); 
if(pid == -1) /* check for error in fork */ 
{ 
perror("bad fork"); 
exit(1); 
} 
if (pid == 0) 
printf("I am the child process.\n"); 
else { wait(&status); /* parent waits for child to finish */ 
printf("I am the parent process.\n"); 
return 0; 
} 
}
